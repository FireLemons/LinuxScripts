#!/bin/bash
# Quick setup for a fresh linux install

# run "who" if you don't remember who the main user is
USER=flysy
# Set to true to skip expensive operations during testing
TEST=true

# Check if running as sudo
if [ "$EUID" -ne 0 ]; then
  echo $'ERROR: Not run with sudo\n  Exiting'
  exit 1
fi

# Add /usr/local/bin to PATH
if [[ $PATH != *"/usr/local/bin"* ]]; then
  echo $'\nINFO: Adding /usr/local/bin to \$PATH\n'
  sudo -u $USER PATH=$PATH:/usr/local/bin
else
  echo $'\nINFO: /usr/local/bin has already been added to \$PATH\n'
fi

# update existing packages
echo $'\nINFO: Updating Installed Packages\n'
if [[ $TEST != true ]]; then
  apt update
  apt upgrade
else
  echo $'  Test run. No packages will be updated and installed\n'
fi

# Remove bloat packages
if [[ $(dpkg -s thunderbird | grep Status) == *"installed" ]]; then
  #   Remove email manager
  apt purge thunderbird
fi

# Install wanted packages
# Checks if a program is already installed before attempting to install it
#   Param $1 string  | The name of the package to be installed
#   Param $2 boolean | true to prompt the user for approval of an install. false otherwise
function installCheck {
  if [[ -z $1 ]]; then
    echo "ERROR: function installCheck was run without parameters"
    return
  fi

  if [[ $(dpkg -s $1 | grep Status) != *"installed" ]]; then
    if [[ ! -z $2 && $2 == true ]]; then
      read -p "$1 is not installed. Would you like to install it? Y/N: " installAsk

      if [[ $installAsk =~ [yY].* ]]; then
        echo "INFO: installing $1"
        apt install $1
      else
        echo "INFO: Skipping installing $1"
      fi
    else
      echo "INFO: installing $1"
      apt install $1
    fi
  else
    echo "INFO: $1 is already installed"
  fi
}

#   Install external drive format support
installCheck exfat-fuse
installCheck exfat-utils

#   Install file archivers
installCheck p7zip-full

#   Install cURL
installCheck curl

#   Install Macchanger
installCheck macchanger true

#   Install git
installCheck git

#   Install vim
installCheck vim
#     Make vim the default editor
sudo -u $USER export VISUAL=vim
sudo -u $USER export EDITOR="$VISUAL"
#     Install youcompleteme dependencies
echo "INFO: installing dependencies for youcompleteme"
installCheck build-essential
installCheck cmake
installCheck python3-dev
#     Install Vundle for youcompleteme
if [[ ! -f "/home/$USER/.vim/bundle/Vundle.vim" ]]; then
  echo "INFO: Installing Vundle"
  sudo -u $USER git clone "https://github.com/VundleVim/Vundle.vim.git" "/home/$USER/.vim/bundle/Vundle.vim"
  sudo -u $USER cp "/home/$USER/Projects/LinuxScripts/.vimrc" "/home/$USER"
  sudo -u $USER vim +PluginInstall +qall
  echo "INFO: Installing YouCompleteMe"
  cd "/home/$USER/.vim/bundle/youcompleteme"
  sudo -u $USER python3 install.py --clangd-completer --ts-completer
else
  echo "INFO: YouCompleteMe is already installed. Skipping install"
fi


# Clean up
apt autoremove
